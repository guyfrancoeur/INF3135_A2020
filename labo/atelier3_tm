#include <iostream>
#include <math.h>
#include <string.h>
#include <stdlib.h>  
#include <stdio.h>


//int strcmp ( const char * str1, const char * str2 );
//long int strtol (const char* str, char** endptr, int base);

int check_d(int _nbr_arguments, char** _arguments,  int _position) {
  if (strcmp(_arguments[_position], "-d")) {
    // verifier que i+1 existe
    if ((_position + 1) < _nbr_arguments) {
      // recuperer la valeur de l'argument
      char* valeur = _arguments[_position + 1];
      // comparer avec les valeurs de reference
      if (!strcmp(valeur, "INC") || !strcmp(valeur, "DEC")) {
        // tout est ok
      }
      else {
        return 3;
      }
    }
    
  }
  return 0;
}

int cmdline(int _nbr_arguments, char** _arguments) {
  bool has_arg_c = false;

  for (int i = 0; i != _nbr_arguments; ++i) {
    //printf("%s\n", _nbr_arguments[i]);

    if (!strcmp(_arguments[i], "-d")) {
      // verifier que i+1 existe
      if ((i + 1) < _nbr_arguments) {
        // recuperer la valeur de l'argument
        char* valeur = _arguments[i + 1];
        // comparer avec les valeurs de reference
        if (!strcmp(valeur, "INC") || !strcmp(valeur, "DEC")) {
          // tout est ok
        }
        else {
          return 3;
        }
      }
    }
    else if (!strcmp(_arguments[i], "-c")) {
      if ((i + 1) < _nbr_arguments) {
        has_arg_c = true;
      }
    }
    else if (!strcmp(_arguments[i], "-1")) {
      if ((i + 1) < _nbr_arguments) {
        // devrait aussi fonctionner pour le cas avec 0
        long entier = atol(_arguments[i + 1]);
        if (!entier) {
          return 2;
        }
      }
    } 
  }
  if (!has_arg_c) return 1;
  return 0;
}



unsigned int trouverElement(const double* tableau, unsigned int taille, double element) {
  for (int i = 0; i != taille; ++i) {
    if (tableau[i] == element) {
      return i+1;
    }
  }
  return 0;
}

int main(int argc, char** argv)
{
  //int retour = cmdline(argc, argv);
  //printf("%d", retour);
  
  double tableau[] = { 3000, 21, 5, 4, 34, 8 };
  int resultat = trouverElement(tableau, 6, 3);
  printf("%d", resultat);
  std::cout << "Hello World!";
}
